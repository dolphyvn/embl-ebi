#https://github.com/grafana/grafana/issues/1789
---
- name: Creates grafana build directory
  file: 
    path: "{{ item }}"
    state: directory
  with_items:
    - /tmp/grafana

- name: Get md5sum of grafana folder before
  shell: find /tmp/grafana -xdev -type f -print0 | LC_COLLATE=C sort -z | xargs -0 cat| md5sum
  register: md5_before

- name: Copy custom dashboard js files
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: 'files/getdash.js', dest: '/tmp/grafana/getdash.js' }
    - { src: 'files/getdash.app.js', dest: '/tmp/grafana/getdash.app.js' }
    - { src: 'files/getdash.conf.js', dest: '/tmp/grafana/getdash.conf.js' }
    - { src: 'files/Dockerfile', dest: '/tmp/grafana/Dockerfile' }

- name: Get md5sum of grafana folder after
  shell: find /tmp/grafana -xdev -type f -print0 | LC_COLLATE=C sort -z | xargs -0 cat| md5sum
  register: md5_after

- include_tasks: build_grafana.yaml
  when: md5_before != md5_after


- name: Start Grafana container
  docker_container:
    name: grafana
    image: "{{ grafana_image_name }}"
    state: started
    ports:
      - "3000:3000"
    volumes:
      - /var/lib/grafana
      - /tmp:/tmp

# Check if datasource name collectd exisiting 
- uri:
    url: "{{ grafana_url }}/api/datasources/name/collectd"
    user: admin
    password: admin
    force_basic_auth: yes
  register: grafana_collectd
  failed_when: false
  changed_when: false
  ignore_errors: True

# Create datasource if not exist, ignore if it throwing any error, the creation still works.
- name: Enable Colectd Datasource
  uri:
    url: "{{ grafana_url }}/api/datasources"
    method: POST
    user: admin
    password: admin
    body:
      name: "collectd"
      type: "influxdb"
      url: "{{ influxdb_url }}"
      access: "proxy"
      isDefault: true
    force_basic_auth: yes
    status_code: 201
    body_format: json
  when: grafana_collectd.status == 404
  ignore_errors: True
